name: Docker Publish

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest URL
        id: get_url
        run: |
          latest_url=$(bash get_url.sh)
          echo "::set-output name=latest_url::$latest_url"

      - name: Calculate hash
        id: calculate_hash
        run: |
          latest_url=${{ steps.get_url.outputs.latest_url }}
          hash=$(echo -n "$latest_url" | sha256sum | cut -d ' ' -f 1)
          echo "::set-output name=hash::$hash"

      - name: Extract version
        id: extract_version
        run: |
          latest_url=${{ steps.get_url.outputs.latest_url }}
          echo "Latest URL: $latest_url"
          version=$(basename "$latest_url" | sed -n 's/.*easybot-[^-]*-x64-\([0-9]\+\.[0-9]\+\.[0-9]\+-[0-9a-z]\+\)\..*/\1/p')
          if [ -z "$version" ]; then
            echo "Error: Failed to extract version from URL."
            exit 1
          fi
          echo "Extracted version: $version"
          echo "::set-output name=version::$version"

      - name: Compare hash with version file
        id: compare_hash
        run: |
          if [ -f version ]; then
            old_hash=$(cat version)
            if [ "$old_hash" == "${{ steps.calculate_hash.outputs.hash }}" ]; then
              echo "Hashes are the same. Skipping build."
              echo "::set-output name=skip_build::true"
            else
              echo "Hashes are different. Proceeding with build."
              echo "::set-output name=skip_build::false"
            fi
          else
            echo "Version file not found. Proceeding with build."
            echo "::set-output name=skip_build::false"
          fi

      - name: Set up Docker Buildx
        if: steps.compare_hash.outputs.skip_build == 'false'
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        if: steps.compare_hash.outputs.skip_build == 'false'
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-buildx-${{ runner.os }}-${{ steps.calculate_hash.outputs.hash }}
          restore-keys: |
            docker-buildx-${{ runner.os }}-

      - name: Login to Docker Hub
        if: steps.compare_hash.outputs.skip_build == 'false'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.compare_hash.outputs.skip_build == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/wlingxd/easybot:${{ steps.extract_version.outputs.version }}
            docker.io/wlingxd/easybot:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Update version file
        if: steps.compare_hash.outputs.skip_build == 'false'
        run: |
          echo "${{ steps.calculate_hash.outputs.hash }}" > version

      - name: Submit Changes
        if: steps.compare_hash.outputs.skip_build == 'false'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "[Bot] Update version hash"
          add: "version"
